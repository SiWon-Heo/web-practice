1. DOM API의 개념
DOM = Document Object Model
HTML에 들어간 여러 요소, div span 등등
API = Application Programming Interface
DOM API는 js에서 다루는, HTML의 여러 요소를 제어하는 함수라고 보면 됨
e.g. boxEl.addEventListener('click', function () {
  console.log('Hello!');
});

2. Angular vs React vs Vue
* Angular
  웹에 필요한 모든 기능이 프레임워크 안에서 구현됨(인증 등등)
  Full Framework 지향

* Vue
  Progressive JS Framework
  Angular와 React의 목적을 둘다 달성 가능함
  중도 성향

* React
  유저 인터페이스, 즉 뷰에 집중한 라이브러리
  라이브러리 지향

3. 컴포넌트란?  
리액트는 component-based development를 지원함
기존의 정의된 태그: img, button 등등
컴포넌트는 태그 이름과 속성을 직접 정의할 수 있음.
컴포넌트는 HTML, CSS, JS를 합쳐서 사용자가 만드는 일종의 태그
컴포넌트 트리는 DOM 트리로 변환됨

4. Virtual DOM이란?
DOM을 직접 제어하는 경우, 바뀐 부분을 정확하게 바꿔줘야함
하지만 가상돔을 사용하면 전후 상태를 비교해서 알아서 바꿔줌
State change -> Compute Diff -> Re-render의 과정을 거침

5. 리액트의 렌더링
1) Client-Side Rendering(CSR)
HTML 다운 -> JS 파일 요청 -> JS 다운로드(JS 안에는 리액트 전체 application이 들어있음) -> 브라우저가 js 로드 및 실행-> 렌더링
특정 컴포넌트가 그려지면서 비로소 유저에게 보이게 됨

2) Server-Side Rendering(SSR)
HTML 다운로드 -> HTML 렌더링(잠깐 보이게 될 예정, 유저 interaction은 불가능) -> JS 다운로드, 리액트 실행 -> 다시 렌더링(JS 동작 실행 가능)
빠른 선 렌더링이 필요하면 사용하는게 좋을듯

6. 

